Design Notes:  Hello NUnit
===================================================
Assumptions:  

- Not using actual IoC container, dependency injection
is manual.
===================================================
Description:

Console application that accepts input and writes it
back to the console as a greeting.
===================================================
Concepts Illustrated:
- Top-down design
- Test-Driven Development
- NUnit
- Moq
- Dependency Injection
===================================================
Stub out initial test for Program.cs

Tests:
	Constructor_Always_Succeeds
===================================================
Introduce Greeter

IGreeter
	void Greet(string userName)

Greeter : IGreeter [stub]

GreeterTests
	Constructor_Always_Succeeds [stub]

Program
	Main
		Instantiate Greeter

ProgramTests [Delete]
	
===================================================
Implement Greeter

IConsoleWriter
	void WriteLine(message, params string[] args)

ConsoleWriterImpl : IConsoleWriter

Greeter
	.ctor(IConsoleWriter writer)

GreeterTests
	Add Mock<IConsoleWriter> and inject into constructor
	Greet_Always_PerformsExpectedWork

===================================================
Add parameterized tests for Greeter

GreeterTests
	Greet_Always_PerformsExpectedWork
		Add TestCaseAttributes with specific test cases
		Add inbound string parameter
		Update mock expectation to use inbound parameter

Greeter
	Greet
		Update consoleWriter invocation to pass userName parameter
		and formatstring
===================================================


